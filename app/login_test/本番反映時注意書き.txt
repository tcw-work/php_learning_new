個別に修正必要なファイル
・common.php
・register.php
・login.php(headerlocationのパラメーターを必要に応じて)
・mail.php （header("location: ./index.php?mailFalse_message="の相対パス　（もとは../だったけどこのままでオッケー）


●Xserverのキャッシュが強すぎる問題

FTPでファイル削除しても残り続ける
＋
ログイン時にログイン前のキャッシュ画残り続けてバッティングする


①管理画面から高速化→ブラウザキャッシュ設定→変更後の設定をOFF→反映まつ

②header locationにパラメーターをつける（全てのリダイレクトに適応する必要があるためNG）
header("location: ./index.php?login_true

ブラウザはURLごとにページのキャッシュを保持することがあるため、クエリパラメータを変更することで、URLが異なると認識されのだ。
キャッシュされたページではなく新しくサーバからページを取得することが強制される場合がある。これにより


③Xアクセレーター、ブラウザキャッシュ設定をOFF
→上記は恐らくキャッシュをため込んでサイトを高速化する機能だがサブドメインではなく本ドメインに適応される形になる
→技術ブログ、WEBアプリを同じドメイン配下でせっていしているのであれば、相性がとにかく悪い


●解決方法
サービスワーカーが原因

Service Worker（SW）は、ウェブページやウェブアプリの背後で実行されるスクリプトで、主にオフラインエクスペリエンスの向上やリソースのキャッシングを目的として使用されます。しかし、SWが正しく設定されていない場合、予期しないキャッシングの挙動やリクエストの遮断が発生することがあります。

あなたが経験した問題は、Service Workerがキャッシュを介して古いコンテンツを提供していた可能性が高いです。これは、新しいコンテンツのフェッチや更新が行われる前に、キャッシュから古いコンテンツが返されるためです。

キャッシュの有効期限を設定したり、新しいコンテンツが利用可能になったときにキャッシュを更新するロジックを実装する必要がある




古いService Workerの問題:

以前の設定では、新しいService Workerが登録されても、古いService Workerがアクティブのままでした。これが原因で、新しいコンテンツや変更が反映されない問題が発生していました。
この問題を解決するために、新しいService Workerがインストールされた後でアクティブになるように変更しました。
キャッシュの累積問題:

古いキャッシュが削除されずに累積されていくと、不要なデータが増え続ける問題がありました。
これを解決するために、新しいService Workerがアクティブになる際に古いキャッシュを削除するようにしました。
ネットワークとキャッシュの利用戦略:

以前の戦略では、まずキャッシュを利用し、それがない場合にネットワークを利用するという方法でした。
新しい戦略では、まずネットワ

つまりこれまでは

①サイト郷信されても古いサービスワーカーがアクティブになっており、キャッシュが削除されずどんどん溜まっていった
→これがsession情報とバッティングしていた
②ネットワークに繋がっていない場合、そのキャッシュを使ってサイトを表示していた

それを下記に変更した
①サイトが更新されるごとにサービスワーカーをアクティブにする
②古いキャッシュの削除を試みる
③ネットワークに繋がらなければキャッシュを使ってサイトを表示する

というフローに変更したのですね。